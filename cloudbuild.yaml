# Google Cloud Build configuration for ClipVault Public API
# This file enables automatic deployment to Cloud Run on repository pushes

steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-f', 'docker/Dockerfile',
      '-t', 'gcr.io/$PROJECT_ID/clipvault-public-api:$COMMIT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/clipvault-public-api:latest',
      '.'
    ]

  # Step 2: Push the image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push', 
      'gcr.io/$PROJECT_ID/clipvault-public-api:$COMMIT_SHA'
    ]

  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push', 
      'gcr.io/$PROJECT_ID/clipvault-public-api:latest'
    ]

  # Step 3: Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'run', 'deploy', 'clipvault-public-api-staging',
      '--image', 'gcr.io/$PROJECT_ID/clipvault-public-api:$COMMIT_SHA',
      '--platform', 'managed',
      '--region', 'us-central1',
      '--allow-unauthenticated',
      '--port', '8000',
      '--memory', '512Mi',
      '--cpu', '1',
      '--min-instances', '0',
      '--max-instances', '20',
      '--set-env-vars', 'ENVIRONMENT=staging,PORT=8000,PROJECT_ID=$PROJECT_ID',
      '--service-account', 'clipvault-api-staging@$PROJECT_ID.iam.gserviceaccount.com'
    ]

# Optional: Store images in both Container Registry and Artifact Registry
images:
  - 'gcr.io/$PROJECT_ID/clipvault-public-api:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/clipvault-public-api:latest'

# Cloud Build configuration
options:
  # Use high-performance build machine
  machineType: 'E2_HIGHCPU_8'
  
  # Build timeout (10 minutes should be plenty)
  timeout: '600s'
  
  # Logging configuration
  logging: 'CLOUD_LOGGING_ONLY'

# Substitute variables
substitutions:
  # Default values - these can be overridden in Cloud Build trigger
  _SERVICE_NAME: 'clipvault-public-api-staging'
  _REGION: 'us-central1'
  _MEMORY: '512Mi'
  _CPU: '1'
  _MIN_INSTANCES: '0'
  _MAX_INSTANCES: '20' 